import whisper
import os
from pathlib import Path

import warnings
warnings.filterwarnings("ignore", message="FP16 is not supported on CPU*")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ
model = whisper.load_model("small")

# –ü–∞–ø–∫–∞ –∑ –∞—É–¥—ñ–æ—Ñ–∞–π–ª–∞–º–∏
audio_extensions = [".mp3", ".wav", ".m4a", ".ogg", ".webm"]
audio_directory = Path("audio_contert_to_txt")
txt_directory = Path("converted_txt")

audio_files = [f for f in audio_directory.iterdir() if f.suffix in audio_extensions]

if not audio_files:
    print("‚ùå –ê—É–¥—ñ–æ—Ñ–∞–π–ª–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ –≤ –ø–æ—Ç–æ—á–Ω—ñ–π –ø–∞–ø—Ü—ñ.")
    exit()

for audio_file in audio_files:
    print(f"üîä –û–±—Ä–æ–±–∫–∞: {audio_file.name}")
    result = model.transcribe(str(audio_file), language="ru")

    output_file = audio_file.with_suffix(".txt")
    with open(output_file, "w", encoding="utf-8") as f:
        f.write(result["text"])
    print(f"‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ: {output_file.name}")
